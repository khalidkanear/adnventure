import 'controller/plan_for_future_controller.dart';import 'package:adventure/core/app_export.dart';import 'package:adventure/widgets/custom_button.dart';import 'package:adventure/widgets/custom_icon_button.dart';import 'package:adventure/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';class PlanForFutureScreen extends GetWidget<PlanForFutureController> {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: ColorConstant.gray100, body: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Expanded(child: SingleChildScrollView(child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(padding: getPadding(left: 29, top: 13, right: 29, bottom: 13), decoration: AppDecoration.outlineBlack90029, child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgArrowleft, height: getVerticalSize(35.00), width: getHorizontalSize(38.00), margin: getMargin(top: 5, bottom: 19), onTap: () {onTapImgArrowleft();}), Padding(padding: getPadding(right: 195, bottom: 17), child: Text("lbl_plan_for_future".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular36.copyWith(height: 1.19)))])), Container(width: getHorizontalSize(661.00), margin: getMargin(left: 30, top: 34, right: 29), padding: getPadding(left: 32, top: 24, right: 32, bottom: 24), decoration: AppDecoration.outlineGray80029.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_start_date".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold42Gray90003.copyWith(height: 1.19)), GestureDetector(onTap: () {onTapRowselectdesireddate();}, child: Padding(padding: getPadding(top: 34, right: 1), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Obx(() => Text(controller.planForFutureModelObj.value.selectDesiredDateTxt.value, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular30.copyWith(height: 1.20))), CustomImageView(svgPath: ImageConstant.imgCalendarBlack900, height: getVerticalSize(28.00), width: getHorizontalSize(25.00), margin: getMargin(bottom: 7))]))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(595.00), margin: getMargin(left: 1, top: 23), decoration: BoxDecoration(color: ColorConstant.gray60075)), Padding(padding: getPadding(top: 49), child: Text("lbl_planning_for".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold42Gray90003.copyWith(height: 1.19))), Padding(padding: getPadding(left: 1, top: 39, right: 1), child: Row(children: [Padding(padding: getPadding(top: 5, bottom: 3), child: Text("lbl_adult".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular28Bluegray90087.copyWith(height: 1.18))), Container(margin: getMargin(left: 26), padding: getPadding(left: 14, right: 14), decoration: AppDecoration.outlineGray60085.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(svgPath: ImageConstant.imgIconfeatherminus, height: getVerticalSize(1.00), width: getHorizontalSize(21.00), margin: getMargin(top: 21, bottom: 19)), CustomButton(height: 42, width: 46, text: "lbl_1".tr, margin: getMargin(left: 17), variant: ButtonVariant.FillGray30001, shape: ButtonShape.Square, padding: ButtonPadding.PaddingAll3, fontStyle: ButtonFontStyle.RobotoRegular28Bluegray90001), CustomImageView(svgPath: ImageConstant.imgPlusBlueGray900, height: getSize(21.00), width: getSize(21.00), margin: getMargin(left: 17, top: 10, bottom: 10))])), Spacer(), Padding(padding: getPadding(top: 4, bottom: 4), child: Text("lbl_child".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular28Bluegray90087.copyWith(height: 1.18))), Container(margin: getMargin(left: 31), padding: getPadding(left: 14, right: 14), decoration: AppDecoration.outlineGray60085.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(svgPath: ImageConstant.imgIconfeatherminus, height: getVerticalSize(1.00), width: getHorizontalSize(21.00), margin: getMargin(top: 21, bottom: 19)), CustomButton(height: 42, width: 46, text: "lbl_0".tr, margin: getMargin(left: 17), variant: ButtonVariant.FillGray30001, shape: ButtonShape.Square, padding: ButtonPadding.PaddingAll3, fontStyle: ButtonFontStyle.RobotoRegular28Bluegray90001), CustomImageView(svgPath: ImageConstant.imgPlusBlueGray900, height: getSize(21.00), width: getSize(21.00), margin: getMargin(left: 17, top: 10, bottom: 10))]))])), CustomTextFormField(width: 595, focusNode: FocusNode(), controller: controller.group248Controller, hintText: "msg_type_message_here".tr, margin: getMargin(left: 1, top: 46, bottom: 18), variant: TextFormFieldVariant.OutlineGray600_1, shape: TextFormFieldShape.RoundedBorder20, padding: TextFormFieldPadding.PaddingAll23, fontStyle: TextFormFieldFontStyle.RobotoRegular22Bluegray90087, textInputAction: TextInputAction.done, maxLines: 7)])), Container(width: getHorizontalSize(661.00), margin: getMargin(left: 30, top: 35, right: 29), padding: getPadding(left: 24, top: 19, right: 24, bottom: 19), decoration: AppDecoration.outlineGray80029.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: getPadding(left: 8, right: 4), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("msg_use_earned_points".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium28Bluegray90001.copyWith(height: 1.18)), CustomIconButton(height: 31, width: 30, margin: getMargin(bottom: 2), variant: IconButtonVariant.FillBluegray900, shape: IconButtonShape.RoundedBorder5, padding: IconButtonPadding.PaddingAll7, child: CustomImageView(svgPath: ImageConstant.imgCheckmarkWhiteA70031x30))])), Padding(padding: getPadding(left: 13, top: 27, bottom: 4), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: getPadding(top: 19, bottom: 16), child: Text("msg_available_points".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular18Teal300.copyWith(height: 1.22))), Padding(padding: getPadding(left: 8, top: 7, bottom: 7), child: Text("lbl_5002".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular36Teal300.copyWith(height: 1.19))), Spacer(), Padding(padding: getPadding(top: 19, bottom: 16), child: Text("lbl_opt_to_use".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular18Teal300.copyWith(height: 1.22))), CustomButton(height: 58, width: 130, text: "lbl_300".tr, margin: getMargin(left: 14), variant: ButtonVariant.OutlineGray60090, shape: ButtonShape.RoundedBorder10, padding: ButtonPadding.PaddingAll8, fontStyle: ButtonFontStyle.RobotoRegular36Black900a201)]))])), Container(width: getHorizontalSize(661.00), margin: getMargin(left: 30, top: 30, right: 29), padding: getPadding(left: 32, top: 23, right: 32, bottom: 23), decoration: AppDecoration.outlineGray80029.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("msg_apply_promo_code".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold42Gray90003.copyWith(height: 1.19)), Align(alignment: Alignment.centerRight, child: Padding(padding: getPadding(top: 30, right: 12), child: Text("lbl_apply".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular28Bluegray900.copyWith(height: 1.18)))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(591.00), margin: getMargin(left: 2, top: 23, bottom: 8), decoration: BoxDecoration(color: ColorConstant.gray60086))])), Container(width: getHorizontalSize(661.00), margin: getMargin(left: 30, top: 23, right: 29), padding: getPadding(left: 32, top: 31, right: 32, bottom: 31), decoration: AppDecoration.outlineGray80029.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: getPadding(top: 2, right: 3), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_per_person".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium28Bluegray90001.copyWith(height: 1.18))), Padding(padding: getPadding(top: 1), child: Text("lbl_20_0002".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium28Bluegray9008a.copyWith(height: 1.18)))])), Padding(padding: getPadding(top: 25, right: 3), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(bottom: 1), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_total_person".tr, style: TextStyle(color: ColorConstant.blueGray90001, fontSize: getFontSize(28), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: 1.18)), TextSpan(text: "lbl_x1".tr, style: TextStyle(color: ColorConstant.blueGray90001, fontSize: getFontSize(28), fontFamily: 'Roboto', fontWeight: FontWeight.w300, height: 1.18))]), textAlign: TextAlign.left)), Padding(padding: getPadding(top: 1), child: Text("lbl_20_0002".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium28Bluegray9008a.copyWith(height: 1.18)))])), Padding(padding: getPadding(top: 25, right: 3), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_promo_code".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium28Green600.copyWith(height: 1.18))), Padding(padding: getPadding(top: 1), child: Text("lbl_5003".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium28Green600.copyWith(height: 1.18)))])), Padding(padding: getPadding(top: 25, right: 3), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_points".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium28Green600.copyWith(height: 1.18))), Padding(padding: getPadding(top: 1), child: Text("lbl_150".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium28Green600.copyWith(height: 1.18)))])), Container(height: getVerticalSize(1.00), width: getHorizontalSize(591.00), margin: getMargin(top: 34), decoration: BoxDecoration(color: ColorConstant.gray60086)), Padding(padding: getPadding(top: 34, right: 3), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(bottom: 9), child: Text("lbl_total_amount".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium28Bluegray90001.copyWith(height: 1.18))), Text("lbl_19_350".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold36.copyWith(height: 1.19))]))])), CustomButton(height: 99, width: 449, text: "lbl_send_request".tr, margin: getMargin(top: 61, bottom: 90))])))]))); } 
onTapImgArrowleft() { Get.back(); } 
Future<void> onTapRowselectdesireddate() async  { DateTime? dateTime  = await showDatePicker(context: Get.context!,initialDate: controller.planForFutureModelObj.value.selectedSelectDesiredDateTxt , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {controller.planForFutureModelObj.value.selectedSelectDesiredDateTxt=dateTime;controller.planForFutureModelObj.value.selectDesiredDateTxt.value=dateTime.format(DD_MM_YYYY);} } 
 }
